package com.redhat.ceylon.compiler.test.statement.loop;

class MethodForFail extends .ceylon.language.Object {
    
    public final Natural m(final Sequence<Integer> seq) {
        boolean $ceylontmp0 = true;
        .ceylon.language.Iterator<Integer> $ceylontmp1 = seq.iterator();
        while (true) {
            final .ceylon.language.Optional<Integer> $ceylontmp2 = $ceylontmp1.head();
            if ($ceylontmp2 != null) {
                Integer i = $ceylontmp2.$internalErasedExists();
                while (ceylon.language.$true.getTrue() == ceylon.language.$true.getTrue()) {
                    boolean $ceylontmp3 = true;
                    .ceylon.language.Iterator<Integer> $ceylontmp4 = seq.iterator();
                    while (true) {
                        final .ceylon.language.Optional<Integer> $ceylontmp5 = $ceylontmp4.head();
                        if ($ceylontmp5 != null) {
                            Integer i = $ceylontmp5.$internalErasedExists();
                            $ceylontmp3 = false;
                            break;
                        } else {
                            break;
                        }
                        $ceylontmp4 = $ceylontmp4.tail();
                    }
                    if ($ceylontmp3) {
                        return .ceylon.language.Natural.instance(1L);
                    }
                    break;
                }
                do {
                    break;
                }                 while (ceylon.language.$true.getTrue() == ceylon.language.$true.getTrue());
                $ceylontmp0 = false;
                break;
            } else {
                break;
            }
            $ceylontmp1 = $ceylontmp1.tail();
        }
        if ($ceylontmp0) {
            return .ceylon.language.Natural.instance(0L);
        }
        return .ceylon.language.Natural.instance(2L);
    }
    
    MethodForFail() {
    }
}