package com.redhat.ceylon.compiler.java.test.issues.bug09xx;

final class bug997_ {
    
    private bug997_() {
    }
    
    static void bug997() {
        
        final class format_ {
            
            private format_() {
            }
            
            .java.lang.String format(final .java.lang.String first, final .java.lang.String second) {
                return first + " " + second;
            }
        }
        final format_ format = new format_();
        final .ceylon.language.Callable<? extends .java.lang.Object> printf = .ceylon.language.compose_.<.java.lang.Object, .ceylon.language.String, .ceylon.language.Sequence<? extends .ceylon.language.String>>compose(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Anything.$TypeDescriptor$), "Anything(Anything)", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0) {
                final .java.lang.Object $ceylontmp$val = $param$0;
                return (
                    let
                    {
                        .ceylon.language.print_.print($ceylontmp$val);
                    }
                    returning null;
                );
            }
        }, new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), "String(String, String)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .java.lang.String $ceylontmp$first = ((.ceylon.language.String)$param$0).toString();
                final .java.lang.String $ceylontmp$second = ((.ceylon.language.String)$param$1).toString();
                return .ceylon.language.String.instance(format.format($ceylontmp$first, $ceylontmp$second));
            }
        });
        final .ceylon.language.Callable<? extends .java.lang.Object> greetme = .ceylon.language.shuffle_.<.java.lang.Object, .ceylon.language.Sequence<? extends .ceylon.language.String>, .ceylon.language.Sequence<? extends .ceylon.language.String>>shuffle(.ceylon.language.Anything.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), .ceylon.language.curry_.<.java.lang.Object, .ceylon.language.String, .ceylon.language.String, .ceylon.language.Sequence<? extends .ceylon.language.String>>curry(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), printf)).$call$((.java.lang.Object).ceylon.language.String.instance("Gavin"));
    }
}