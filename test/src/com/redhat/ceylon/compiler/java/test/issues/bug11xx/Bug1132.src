package com.redhat.ceylon.compiler.java.test.issues.bug11xx;

public class Bug1132Class implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Bug1132Class() {
        (
            let
            {
                .ceylon.language.Callable<? extends .ceylon.language.String> $ceylontmp$f1$0 = .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class.$default$f1();
                .java.lang.String $ceylontmp$o$1 = .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class.$default$o($ceylontmp$f1$0);
                this($ceylontmp$f1$0, $ceylontmp$o$1);
            }
            returning null;
        );
    }
    
    public Bug1132Class(final .ceylon.language.Callable<? extends .ceylon.language.String> f1) {
        (
            let
            {
                .java.lang.String $ceylontmp$o$2 = .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class.$default$o(f1);
                this(f1, $ceylontmp$o$2);
            }
            returning null;
        );
    }
    
    public Bug1132Class(final .ceylon.language.Callable<? extends .ceylon.language.String> f1, final .java.lang.String o) {
    }
    
    public static .ceylon.language.Callable<? extends .ceylon.language.String> $default$f1() {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$)), "String(String())", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.Callable<? extends .ceylon.language.String> f2 = (.ceylon.language.Callable<? extends .ceylon.language.String>)(.ceylon.language.Callable)$param$0;
                return f2.$call$();
            }
        };
    }
    
    public static .java.lang.String $default$o(final .ceylon.language.Callable<? extends .ceylon.language.String> f1) {
        return "";
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class.class);
}
public class Bug1132Class2<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Bug1132Class2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        (
            let
            {
                .ceylon.language.Callable<? extends T> $ceylontmp$f1$3 = .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class2.<T>$default$f1($reified$T);
                this($reified$T, $ceylontmp$f1$3);
            }
            returning null;
        );
    }
    
    public Bug1132Class2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .ceylon.language.Callable<? extends T> f1) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static <T>.ceylon.language.Callable<? extends T> $default$f1(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<T>($reified$T, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, $reified$T, .ceylon.language.Empty.$TypeDescriptor$)), "T(T())", (short)-1){
            
            @.java.lang.Override
            public T $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.Callable<? extends T> f2 = (.ceylon.language.Callable<? extends T>)(.ceylon.language.Callable)$param$0;
                return f2.$call$();
            }
        };
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class2(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug11xx.Bug1132Class2.class, $reified$T);
    }
}
public final class bug1132_ {
    
    private bug1132_() {
    }
    
    public static <T>void bug1132(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        final .ceylon.language.Callable<? extends .ceylon.language.String> g1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, 1, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .ceylon.language.String.$TypeDescriptor$), "String(String(), String=)", (short)-1){
            
            private final .java.lang.String $default$o(final .ceylon.language.Callable<? extends .ceylon.language.String> g) {
                return "";
            }
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.Callable<? extends .ceylon.language.String> g = (.ceylon.language.Callable<? extends .ceylon.language.String>)(.ceylon.language.Callable)$param$0;
                final .java.lang.String o = $default$o(g);
                return $calltyped$(g, o);
            }
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .ceylon.language.Callable<? extends .ceylon.language.String> g = (.ceylon.language.Callable<? extends .ceylon.language.String>)(.ceylon.language.Callable)$param$0;
                final .java.lang.String o = ((.ceylon.language.String)$param$1).toString();
                return $calltyped$(g, o);
            }
            
            private .ceylon.language.String $calltyped$(final .ceylon.language.Callable<? extends .ceylon.language.String> g, final .java.lang.String o) {
                return g.$call$();
            }
        };
        final .ceylon.language.Callable<? extends T> g2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<T>($reified$T, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, $reified$T, .ceylon.language.Empty.$TypeDescriptor$)), "T(T())", (short)-1){
            
            @.java.lang.Override
            public T $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.Callable<? extends T> g = (.ceylon.language.Callable<? extends T>)(.ceylon.language.Callable)$param$0;
                return g.$call$();
            }
        };
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug11xx.bug1132_.bug1132(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
}