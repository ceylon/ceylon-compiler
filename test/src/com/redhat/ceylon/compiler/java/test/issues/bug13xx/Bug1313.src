package com.redhat.ceylon.compiler.java.test.issues.bug13xx;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::Summable<com.redhat.ceylon.compiler.java.test.issues.bug13xx::Bug1313>"})
class Bug1313 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Summable<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313>, .java.io.Serializable {
    
    Bug1313() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.ActualAnnotation$annotation$
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.issues.bug13xx::Bug1313",
            erased = true,
            untrusted = true)
    public final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 plus(@.com.redhat.ceylon.compiler.java.metadata.Name("other")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.issues.bug13xx::Bug1313")
    final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 other) {
        return (.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313).ceylon.language.nothing_.get_();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class bug1313_ {
    
    private bug1313_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    static void bug1313() {
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> methodReference = (
            let
            {
                final long $instance$ = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer)", (short)-1){
                
                @.java.lang.Override
                @.com.redhat.ceylon.compiler.java.metadata.Ignore
                public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                    final long $ceylontmp$other = ((.ceylon.language.Integer)$param$0).longValue();
                    return (.ceylon.language.Integer).ceylon.language.Integer.instance(.ceylon.language.Integer.plus($instance$, $ceylontmp$other));
                }
            };
        );
        final .ceylon.language.Callable<? extends .ceylon.language.String> methodReference2 = (
            let
            {
                final .java.lang.String $instance$ = "";
            }
            returning new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), "String(String)", (short)-1){
                
                @.java.lang.Override
                @.com.redhat.ceylon.compiler.java.metadata.Ignore
                public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                    final .java.lang.String $ceylontmp$other = ((.ceylon.language.String)$param$0).toString();
                    return (.ceylon.language.String).ceylon.language.String.instance(.ceylon.language.String.plus($instance$, $ceylontmp$other));
                }
            };
        );
        final .ceylon.language.Callable<? extends .ceylon.language.String> methodReference3 = (
            let
            {
                final .java.lang.String $instance$ = "";
            }
            returning new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), "String(String, String)", (short)-1){
                
                @.java.lang.Override
                @.com.redhat.ceylon.compiler.java.metadata.Ignore
                public .ceylon.language.String $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                    final .java.lang.String $ceylontmp$substring = ((.ceylon.language.String)$param$0).toString();
                    final .java.lang.String $ceylontmp$replacement = ((.ceylon.language.String)$param$1).toString();
                    return (.ceylon.language.String).ceylon.language.String.instance(.ceylon.language.String.replace($instance$, $ceylontmp$substring, $ceylontmp$replacement));
                }
            };
        );
        final .ceylon.language.Callable<? extends .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313> methodReference4 = (.ceylon.language.Callable<? extends .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313>)(.ceylon.language.Callable)(
            let
            {
                final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 $instance$ = new .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313();
            }
            returning new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313>(.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor$), "Bug1313(Bug1313)", (short)-1){
                
                @.java.lang.Override
                @.com.redhat.ceylon.compiler.java.metadata.Ignore
                public .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 $call$(final .java.lang.Object $param$0) {
                    final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 $ceylontmp$other = (.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313)$param$0;
                    return (.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313)(.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313)$instance$.plus($ceylontmp$other);
                }
            };
        );
    }
}