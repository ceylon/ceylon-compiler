package com.redhat.ceylon.compiler.java.test.annotations;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class AmbiguousClass implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected AmbiguousClass() {
        super();
        this.s = null;
        this.s2 = null;
        this.s3 = null;
    }
    
    @.com.redhat.ceylon.compiler.java.test.annotations.TypeOrConstructorTarget
    AmbiguousClass(@.com.redhat.ceylon.compiler.java.metadata.Name("s2")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    @.com.redhat.ceylon.compiler.java.test.annotations.ParameterOrFieldTarget
    final .java.lang.String s2, @.com.redhat.ceylon.compiler.java.metadata.Name("s3")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    @.com.redhat.ceylon.compiler.java.test.annotations.ParameterOrFieldOrMethodTarget
    final .java.lang.String s3) {
        this.s2 = s2;
        this.s3 = s3;
        this.s = "";
    }
    @.com.redhat.ceylon.compiler.java.test.annotations.FieldOrMethodTarget
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .java.lang.String s;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    public final .java.lang.String getS() {
        return s;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .java.lang.String s2;
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    private final .java.lang.String getS2$priv$() {
        return s2;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .java.lang.String s3;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    public final .java.lang.String getS3() {
        return s3;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.AmbiguousClass.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.AmbiguousClass.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Name("ambiguousObject")
@.com.redhat.ceylon.compiler.java.metadata.Object
final class ambiguousObject_ implements .java.io.Serializable, .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    private ambiguousObject_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private .java.lang.Object readResolve() {
        return .com.redhat.ceylon.compiler.java.test.annotations.ambiguousObject_.get_();
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.ambiguousObject_.class);
    @.com.redhat.ceylon.compiler.java.test.annotations.FieldOrMethodTarget
    private static final .com.redhat.ceylon.compiler.java.test.annotations.ambiguousObject_ value;
    private static volatile boolean $init$value = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            value = new .com.redhat.ceylon.compiler.java.test.annotations.ambiguousObject_();
            $initException$ = null;
            $init$value = true;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            value = null;
            $init$value = false;
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.annotations::ambiguousObject")
    static .com.redhat.ceylon.compiler.java.test.annotations.ambiguousObject_ get_() {
        if (ambiguousObject_.$init$value) {
            return value;
        } else {
            if ($initException$ != null) .com.redhat.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'ambiguousObject\' before it was set");
        }
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.ambiguousObject_.$TypeDescriptor$;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.com.redhat.ceylon.compiler.java.metadata.Ignore
@.com.redhat.ceylon.compiler.java.test.annotations.TypeOrAnnotationTypeTarget
@.java.lang.annotation.Target({.java.lang.annotation.ElementType.TYPE})
@interface AmbiguousAnnotationClass$annotation$ {
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::OptionalAnnotation<com.redhat.ceylon.compiler.java.test.annotations::AmbiguousAnnotationClass,ceylon.language.meta.declaration::ClassDeclaration,ceylon.language::Anything>"})
final class AmbiguousAnnotationClass implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.OptionalAnnotation<.com.redhat.ceylon.compiler.java.test.annotations.AmbiguousAnnotationClass, .ceylon.language.meta.declaration.ClassDeclaration, .java.lang.Object>, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    AmbiguousAnnotationClass(.com.redhat.ceylon.compiler.java.test.annotations.AmbiguousAnnotationClass$annotation$ anno) {
        this();
    }
    
    AmbiguousAnnotationClass() {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.AmbiguousAnnotationClass.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.AmbiguousAnnotationClass.class);
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.AmbiguousAnnotationClass$annotation$.class;
    }
}