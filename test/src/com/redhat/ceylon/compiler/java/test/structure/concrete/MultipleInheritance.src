package com.redhat.ceylon.compiler.java.test.structure.concrete;

public interface MultipleInheritance {
    
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$impl();
    
    public long getA();
    
    public void setA(final long a);
    
    public .java.lang.Object m();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance.class);
}
public final class MultipleInheritance$impl implements .java.io.Serializable {
    
    public MultipleInheritance$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance $this;
    
    public final long getA() {
        return 1L;
    }
    
    public final void setA(final long a) {
    }
    
    public .java.lang.Object m() {
        return null;
    }
}
class MultipleInheritanceImpl implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance, .java.io.Serializable {
    
    MultipleInheritanceImpl() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$ = new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$;
    }
    
    @.java.lang.Override
    public long getA() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.getA();
    }
    
    @.java.lang.Override
    public void setA(final long a) {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.setA(a);
    }
    
    @.java.lang.Override
    public .java.lang.Object m() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.m();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl.class);
}
interface MultipleInheritanceSub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance {
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub.class);
}
class MultipleInheritanceSubImpl implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub, .java.io.Serializable {
    
    MultipleInheritanceSubImpl() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$ = new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$;
    }
    
    @.java.lang.Override
    public long getA() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.getA();
    }
    
    @.java.lang.Override
    public void setA(final long a) {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.setA(a);
    }
    
    @.java.lang.Override
    public .java.lang.Object m() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.m();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl.class);
}
class MultipleInheritanceImplSub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub {
    
    MultipleInheritanceImplSub() {
        super();
        this.a = 1L;
    }
    private long a;
    
    @.java.lang.Override
    public final long getA() {
        return a;
    }
    
    @.java.lang.Override
    public final void setA(final long a) {
        this.a = a;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.m();
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImplSub.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImplSub.class);
}
class MultipleInheritanceSubImplSub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance {
    
    MultipleInheritanceSubImplSub() {
        super();
        this.a = 1L;
    }
    private long a;
    
    @.java.lang.Override
    public final long getA() {
        return a;
    }
    
    @.java.lang.Override
    public final void setA(final long a) {
        this.a = a;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this$.m();
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImplSub.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImplSub.class);
}