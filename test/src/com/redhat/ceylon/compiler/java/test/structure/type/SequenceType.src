package com.redhat.ceylon.compiler.java.test.structure.type;

class SequenceType implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    SequenceType() {
    }
    
    public final void m() {
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> s1 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>).ceylon.language.Tuple.instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)});
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> s2 = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential).ceylon.language.empty_.get_();
        final .ceylon.language.Sequential<? extends .com.redhat.ceylon.compiler.java.test.structure.type.SequenceType> s3 = (.ceylon.language.Sequence<? extends .com.redhat.ceylon.compiler.java.test.structure.type.SequenceType>).ceylon.language.Tuple.instance(.com.redhat.ceylon.compiler.java.test.structure.type.SequenceType.$TypeDescriptor$, new .java.lang.Object[]{
                this,
                this,
                this});
        final .ceylon.language.Sequential<? extends .com.redhat.ceylon.compiler.java.test.structure.type.SequenceType> s4 = (.ceylon.language.Sequential<? extends .com.redhat.ceylon.compiler.java.test.structure.type.SequenceType>)(.ceylon.language.Sequential).ceylon.language.empty_.get_();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.type.SequenceType.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.type.SequenceType.class);
}