package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callableWithDefaulted_ {
    
    private callableWithDefaulted_() {
    }
    
    static void callableWithDefaulted() {
        final .ceylon.language.Callable<? extends .java.lang.Object> defaultedVariadic = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, 1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer, String=, Integer*)", (short)2){
            
            private final .java.lang.String $default$b(final long a) {
                return "b";
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0.get(.ceylon.language.Integer.instance(0))).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$0.get(.ceylon.language.Integer.instance(1))).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$0.spanFrom(.ceylon.language.Integer.instance(2));
                return $calltyped$(a, b, args);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = $default$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = $default$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$2;
                return $calltyped$(a, b, args);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object... $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0[0]).longValue();
                final .java.lang.String b = $param$0.length > 1 ? ((.ceylon.language.String)$param$0[1]).toString() : $default$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0.length - 2, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0[0]).longValue();
                final .java.lang.String b = $param$0.length > 1 ? ((.ceylon.language.String)$param$0[1]).toString() : $default$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 1, $param$0));
            }
            
            private .ceylon.language.Integer $calltyped$(final long a, final .java.lang.String b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args) {
                return .ceylon.language.Integer.instance(a);
            }
        };
        defaultedVariadic.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L));
        defaultedVariadic.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), (.ceylon.language.Sequential).ceylon.language.empty_.get_());
        defaultedVariadic.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L)}, .ceylon.language.empty_.get_()));
        defaultedVariadic.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L)}, .ceylon.language.empty_.get_()));
        final .ceylon.language.Sequence<? extends .ceylon.language.Integer> ints = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>).ceylon.language.Tuple.instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L)});
        defaultedVariadic.$callvariadic$(.ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)ints);
        defaultedVariadic.$callvariadic$(.ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(3L)}, (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)ints)));
        defaultedVariadic.$callvariadic$(.ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(3L),
                .ceylon.language.Integer.instance(4L)}, (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)ints)));
        defaultedVariadic.$callvariadic$(.ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)ints).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$0 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$0 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$0;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence());
        defaultedVariadic.$callvariadic$(.ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(3L)}, new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)ints).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$1 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$1 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$1;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence())));
        defaultedVariadic.$callvariadic$(.ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(3L),
                .ceylon.language.Integer.instance(4L)}, new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)ints).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$2 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$2 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$2;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence())));
        final .ceylon.language.Callable<? extends .java.lang.Object> defaultedNonemptyVariadic = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, true, -1, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "String(String, Integer+)", (short)1){
            
            @.java.lang.Override
            public .ceylon.language.String $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0).toString();
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)(.ceylon.language.Sequence)$param$1;
                return $calltyped$(b, args);
            }
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0).toString();
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$1}, .ceylon.language.empty_.get_());
                return $calltyped$(b, args$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.String $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0).toString();
                return $calltyped$(b, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$1}, $param$2));
            }
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0).toString();
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        $param$1,
                        $param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(b, args$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.String $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0).toString();
                return $calltyped$(b, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 2, new .java.lang.Object[]{
                        (.ceylon.language.Integer)$param$1,
                        (.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object... $param$0) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0[0]).toString();
                return $calltyped$(b, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 1, $param$0.length - 1, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.String $callvariadic$(final .java.lang.Object... $param$0) {
                final .java.lang.String b = ((.ceylon.language.String)$param$0[0]).toString();
                return $calltyped$(b, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0));
            }
            
            private .ceylon.language.String $calltyped$(final .java.lang.String b, final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args) {
                return .ceylon.language.String.instance(b);
            }
        };
        defaultedNonemptyVariadic.$callvariadic$((.java.lang.Object).ceylon.language.String.instance("a"), (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L)}, .ceylon.language.empty_.get_()));
        defaultedNonemptyVariadic.$callvariadic$((.java.lang.Object).ceylon.language.String.instance("a"), (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L)}, .ceylon.language.empty_.get_()));
        defaultedNonemptyVariadic.$callvariadic$(.ceylon.language.String.instance("a"), (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)ints);
        defaultedNonemptyVariadic.$callvariadic$(.ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(3L)}, (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)ints)));
        defaultedNonemptyVariadic.$callvariadic$(.ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(3L),
                .ceylon.language.Integer.instance(4L)}, (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)ints)));
        defaultedNonemptyVariadic.$callvariadic$(.ceylon.language.String.instance("a"), new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)ints).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$3 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$3 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$3;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence());
        defaultedNonemptyVariadic.$callvariadic$(.ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(3L)}, new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)ints).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$4 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$4 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$4;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence())));
        defaultedNonemptyVariadic.$callvariadic$(.ceylon.language.String.instance("a"), .com.redhat.ceylon.compiler.java.Util.asSequence(.com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(3L),
                .ceylon.language.Integer.instance(4L)}, new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = ((.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)ints).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$5 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$5 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$5;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence())));
        final .ceylon.language.Callable<? extends .java.lang.Object> notDefaulted = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), "Integer(Integer, String)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long $goto = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                return .ceylon.language.Integer.instance($goto);
            }
        };
        notDefaulted.$call$((.java.lang.Object).ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"));
        final .ceylon.language.Callable<? extends .java.lang.Object> foo = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, 0, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), "Integer(Integer=, String=)", (short)-1){
            
            private final long $default$goto() {
                return 2L;
            }
            
            private final .java.lang.String $default$b(final long $goto) {
                return "foo" + .ceylon.language.Integer.toString($goto);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                final long $goto = $default$goto();
                final .java.lang.String b = $default$b($goto);
                return $calltyped$($goto, b);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long $goto = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = $default$b($goto);
                return $calltyped$($goto, b);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long $goto = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                return $calltyped$($goto, b);
            }
            
            private .ceylon.language.Integer $calltyped$(final long $goto, final .java.lang.String b) {
                return .ceylon.language.Integer.instance($goto);
            }
        };
        foo.$call$();
        foo.$call$((.java.lang.Object).ceylon.language.Integer.instance(1L));
        foo.$call$((.java.lang.Object).ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"));
        final .ceylon.language.Callable<? extends .java.lang.Object> bar = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, 0, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), "Integer(Integer=, String=, Integer=, String=, Integer=, String=)", (short)-1){
            
            private final long $default$goto() {
                return 2L;
            }
            
            private final .java.lang.String $default$b(final long $goto) {
                return "foo";
            }
            
            private final long $default$c(final long $goto, final .java.lang.String b) {
                return 2L;
            }
            
            private final .java.lang.String $default$d(final long $goto, final .java.lang.String b, final long c) {
                return "foo";
            }
            
            private final long $default$e(final long $goto, final .java.lang.String b, final long c, final .java.lang.String d) {
                return 2L;
            }
            
            private final .java.lang.String $default$f(final long $goto, final .java.lang.String b, final long c, final .java.lang.String d, final long e) {
                return "foo" + .ceylon.language.Integer.toString($goto);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                final long $goto = $default$goto();
                final .java.lang.String b = $default$b($goto);
                final long c = $default$c($goto, b);
                final .java.lang.String d = $default$d($goto, b, c);
                final long e = $default$e($goto, b, c, d);
                final .java.lang.String f = $default$f($goto, b, c, d, e);
                return $calltyped$($goto, b, c, d, e, f);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long $goto = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = $default$b($goto);
                final long c = $default$c($goto, b);
                final .java.lang.String d = $default$d($goto, b, c);
                final long e = $default$e($goto, b, c, d);
                final .java.lang.String f = $default$f($goto, b, c, d, e);
                return $calltyped$($goto, b, c, d, e, f);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long $goto = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final long c = $default$c($goto, b);
                final .java.lang.String d = $default$d($goto, b, c);
                final long e = $default$e($goto, b, c, d);
                final .java.lang.String f = $default$f($goto, b, c, d, e);
                return $calltyped$($goto, b, c, d, e, f);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long $goto = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final long c = ((.ceylon.language.Integer)$param$2).longValue();
                final .java.lang.String d = $default$d($goto, b, c);
                final long e = $default$e($goto, b, c, d);
                final .java.lang.String f = $default$f($goto, b, c, d, e);
                return $calltyped$($goto, b, c, d, e, f);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object... $param$0) {
                final long $goto = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : $default$goto();
                final .java.lang.String b = $param$0.length > 1 ? ((.ceylon.language.String)$param$0[1]).toString() : $default$b($goto);
                final long c = $param$0.length > 2 ? ((.ceylon.language.Integer)$param$0[2]).longValue() : $default$c($goto, b);
                final .java.lang.String d = $param$0.length > 3 ? ((.ceylon.language.String)$param$0[3]).toString() : $default$d($goto, b, c);
                final long e = $param$0.length > 4 ? ((.ceylon.language.Integer)$param$0[4]).longValue() : $default$e($goto, b, c, d);
                final .java.lang.String f = $param$0.length > 5 ? ((.ceylon.language.String)$param$0[5]).toString() : $default$f($goto, b, c, d, e);
                return $calltyped$($goto, b, c, d, e, f);
            }
            
            private .ceylon.language.Integer $calltyped$(final long $goto, final .java.lang.String b, final long c, final .java.lang.String d, final long e, final .java.lang.String f) {
                return .ceylon.language.Integer.instance($goto);
            }
        };
        bar.$call$();
        bar.$call$((.java.lang.Object).ceylon.language.Integer.instance(1L));
        bar.$call$((.java.lang.Object).ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"), .ceylon.language.Integer.instance(2L), .ceylon.language.String.instance("b"), .ceylon.language.Integer.instance(3L), .ceylon.language.String.instance("c"));
        final .ceylon.language.Callable<? extends .java.lang.Object> oneOrTwo = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, 1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer, Integer=)", (short)-1){
            
            private final long $default$b(final long a) {
                return 2L;
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = $default$b(a);
                return $calltyped$(a, b);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                return $calltyped$(a, b);
            }
            
            private .ceylon.language.Integer $calltyped$(final long a, final long b) {
                return .ceylon.language.Integer.instance(a);
            }
        };
        final .ceylon.language.Callable<? extends .java.lang.Object> one = oneOrTwo;
        final .ceylon.language.Callable<? extends .java.lang.Object> oneOrPlenty = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequential<? extends .ceylon.language.Integer>>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, .ceylon.language.Integer.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, .ceylon.language.Integer.$TypeDescriptor$), "Integer[](Integer*)", (short)0){
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $call$() {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> a = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$0;
                return $calltyped$(a);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$0}, .ceylon.language.empty_.get_());
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                return $calltyped$($spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$0}, $param$1));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        $param$0,
                        $param$1}, .ceylon.language.empty_.get_());
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                return $calltyped$($spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 2, new .java.lang.Object[]{
                        (.ceylon.language.Integer)$param$0,
                        (.ceylon.language.Integer)$param$1}, $param$2));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        $param$0,
                        $param$1,
                        $param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                return $calltyped$($spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 3, new .java.lang.Object[]{
                        (.ceylon.language.Integer)$param$0,
                        (.ceylon.language.Integer)$param$1,
                        (.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $call$(final .java.lang.Object... $param$0) {
                return $calltyped$($spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, $param$0.length - 0, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequential<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object... $param$0) {
                return $calltyped$($spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, $param$0));
            }
            
            private .ceylon.language.Sequential<? extends .ceylon.language.Integer> $calltyped$(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> a) {
                return a;
            }
        };
        final .ceylon.language.Callable<? extends .java.lang.Object> oneOrPlenty2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .ceylon.language.Integer>>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequence.class, .ceylon.language.Integer.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequence.class, .ceylon.language.Integer.$TypeDescriptor$), "[Integer+](Integer+)", (short)0){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> a = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)(.ceylon.language.Sequence)$param$0;
                return $calltyped$(a);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$0}, .ceylon.language.empty_.get_());
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                return $calltyped$((.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$0}, $param$1));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        $param$0,
                        $param$1}, .ceylon.language.empty_.get_());
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                return $calltyped$((.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 2, new .java.lang.Object[]{
                        (.ceylon.language.Integer)$param$0,
                        (.ceylon.language.Integer)$param$1}, $param$2));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> a$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        $param$0,
                        $param$1,
                        $param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                return $calltyped$((.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 3, new .java.lang.Object[]{
                        (.ceylon.language.Integer)$param$0,
                        (.ceylon.language.Integer)$param$1,
                        (.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $call$(final .java.lang.Object... $param$0) {
                return $calltyped$((.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, $param$0.length - 0, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $callvariadic$(final .java.lang.Object... $param$0) {
                return $calltyped$((.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 1, $param$0));
            }
            
            private .ceylon.language.Sequence<? extends .ceylon.language.Integer> $calltyped$(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> a) {
                return a;
            }
        };
        final .ceylon.language.Callable<? extends .java.lang.Object> oneAgain = oneOrPlenty;
    }
}
class CallableWithDefaulted implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    CallableWithDefaulted() {
    }
    
    private final void defaultedVariadic$priv$(final long a) {
        (
            let
            {
                .java.lang.String $ceylontmp$b$6 = defaultedVariadic$b(a);
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$args$7 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                defaultedVariadic$priv$$canonical$(a, $ceylontmp$b$6, $ceylontmp$args$7);
            }
            returning null;
        );
    }
    
    private final .java.lang.String defaultedVariadic$b(final long a) {
        return "b";
    }
    
    private final void defaultedVariadic$priv$(final long a, final .java.lang.String b) {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$args$8 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                defaultedVariadic$priv$$canonical$(a, b, $ceylontmp$args$8);
            }
            returning null;
        );
    }
    
    private void defaultedVariadic$priv$$canonical$(final long a, final .java.lang.String b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args) {
    }
    
    private final void defaultedVariadic$priv$(final long a, final .java.lang.String b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args) {
        (
            let
            {
                defaultedVariadic$priv$$canonical$(a, b, args);
            }
            returning null;
        );
    }
    
    private final void defaultedVariadicNonempty$priv$(final long a, final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args) {
    }
    
    private final void test$priv$() {
        final .ceylon.language.Callable<? extends .java.lang.Object> f = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, 1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Anything(Integer, String=, Integer*)", (short)2){
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0.get(.ceylon.language.Integer.instance(0))).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$0.get(.ceylon.language.Integer.instance(1))).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$0.spanFrom(.ceylon.language.Integer.instance(2));
                return $calltyped$(a, b, args);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$2;
                return $calltyped$(a, b, args);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, b, args$variadic$);
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .java.lang.String b = ((.ceylon.language.String)$param$1).toString();
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object... $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0[0]).longValue();
                final .java.lang.String b = $param$0.length > 1 ? ((.ceylon.language.String)$param$0[1]).toString() : defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0.length - 2, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0[0]).longValue();
                final .java.lang.String b = $param$0.length > 1 ? ((.ceylon.language.String)$param$0[1]).toString() : defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 1, $param$0));
            }
            
            private .java.lang.Object $calltyped$(final long a, final .java.lang.String b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> args) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableWithDefaulted.this.defaultedVariadic$priv$(a, b, args);
                    }
                    returning null;
                );
            }
        };
        final .ceylon.language.Callable<? extends .java.lang.Object> g = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, true, -1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Anything(Integer, Integer+)", (short)1){
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)(.ceylon.language.Sequence)$param$1;
                return $calltyped$(a, args);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$1}, .ceylon.language.empty_.get_());
                return $calltyped$(a, args$variadic$);
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                return $calltyped$(a, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$1}, $param$2));
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args$variadic$ = (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        $param$1,
                        $param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, args$variadic$);
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                return $calltyped$(a, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 2, new .java.lang.Object[]{
                        (.ceylon.language.Integer)$param$1,
                        (.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object... $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0[0]).longValue();
                return $calltyped$(a, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 1, $param$0.length - 1, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .java.lang.Object $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0[0]).longValue();
                return $calltyped$(a, (.ceylon.language.Sequence)$spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0));
            }
            
            private .java.lang.Object $calltyped$(final long a, final .ceylon.language.Sequence<? extends .ceylon.language.Integer> args) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableWithDefaulted.this.defaultedVariadicNonempty$priv$(a, args);
                    }
                    returning null;
                );
            }
        };
    }
    
    private final void methodWithDefaultCallableParam$priv$() {
        (
            let
            {
                .ceylon.language.Callable<? extends .ceylon.language.Integer> $ceylontmp$bar$10 = methodWithDefaultCallableParam$bar();
                methodWithDefaultCallableParam$priv$$canonical$($ceylontmp$bar$10);
            }
            returning null;
        );
    }
    
    private final .ceylon.language.Callable<? extends .ceylon.language.Integer> methodWithDefaultCallableParam$bar() {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer, Integer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .ceylon.language.Integer a = (.ceylon.language.Integer)$param$0;
                final .ceylon.language.Integer b = (.ceylon.language.Integer)$param$1;
                return .ceylon.language.Integer.instance(.ceylon.language.Integer.plus(a.longValue(), b.longValue()));
            }
        };
    }
    
    private void methodWithDefaultCallableParam$priv$$canonical$(final .ceylon.language.Callable<? extends .ceylon.language.Integer> bar) {
        (
            let
            {
                .ceylon.language.Callable arg$9$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer, Integer)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                        final long a = ((.ceylon.language.Integer)$param$0).longValue();
                        final long b = ((.ceylon.language.Integer)$param$1).longValue();
                        return .ceylon.language.Integer.instance(a + b);
                    }
                };
                methodWithDefaultCallableParam$priv$(arg$9$0);
            }
            returning null;
        );
    }
    
    private final void methodWithDefaultCallableParam$priv$(final .ceylon.language.Callable<? extends .ceylon.language.Integer> bar) {
        (
            let
            {
                methodWithDefaultCallableParam$priv$$canonical$(bar);
            }
            returning null;
        );
    }
    
    private final void methodWithDefaultCallableParam2$priv$() {
        (
            let
            {
                .ceylon.language.Callable<? extends .ceylon.language.Integer> $ceylontmp$bar$11 = methodWithDefaultCallableParam2$bar();
                methodWithDefaultCallableParam2$priv$$canonical$($ceylontmp$bar$11);
            }
            returning null;
        );
    }
    
    private final .ceylon.language.Callable<? extends .ceylon.language.Integer> methodWithDefaultCallableParam2$bar() {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(2L);
            }
        };
    }
    
    private void methodWithDefaultCallableParam2$priv$$canonical$(final .ceylon.language.Callable<? extends .ceylon.language.Integer> bar) {
    }
    
    private final void methodWithDefaultCallableParam2$priv$(final .ceylon.language.Callable<? extends .ceylon.language.Integer> bar) {
        (
            let
            {
                methodWithDefaultCallableParam2$priv$$canonical$(bar);
            }
            returning null;
        );
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableWithDefaulted.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.CallableWithDefaulted.class);
}