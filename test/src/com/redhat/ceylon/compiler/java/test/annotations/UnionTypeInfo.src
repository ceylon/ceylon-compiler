package com.redhat.ceylon.compiler.java.test.annotations;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SharedAnnotation$annotation$
public class Foo implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Foo() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Foo.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.Foo.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SharedAnnotation$annotation$
public class Bar implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Bar() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.annotations.Bar();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Bar.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.Bar.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class UnionTypeInfo implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected UnionTypeInfo() {
        super();
        this.sharedAttr = null;
    }
    
    UnionTypeInfo(@.com.redhat.ceylon.compiler.java.metadata.Name("param")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object param) {
        final .java.lang.Object attr;
        this.sharedAttr = new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
        
        @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
        @.com.redhat.ceylon.compiler.java.metadata.Attribute(setterClass = getter$setter$_.class)
        @.com.redhat.ceylon.compiler.java.metadata.Name("getter")
        @.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.language::Getter<com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar>"})
        @.com.redhat.ceylon.compiler.java.metadata.LocalDeclaration
        final class getter$getter$_ implements .com.redhat.ceylon.compiler.java.language.Getter<.java.lang.Object> {
            
            private getter$getter$_() {
            }
            
            @.com.redhat.ceylon.compiler.java.metadata.Transient
            public .java.lang.Object get_() {
                return new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
            }
        }
        final .com.redhat.ceylon.compiler.java.language.Getter getter$getter$_ = new getter$getter$_();
        
        @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
        @.com.redhat.ceylon.compiler.java.metadata.Ignore
        @.com.redhat.ceylon.compiler.java.metadata.Setter(getterClass = getter$getter$_.class)
        @.com.redhat.ceylon.compiler.java.metadata.LocalDeclaration
        final class getter$setter$_ {
            
            private getter$setter$_() {
            }
            private .java.lang.Object value;
            
            public void set_(@.com.redhat.ceylon.compiler.java.metadata.Name("getter")
            final .java.lang.Object getter) {
            }
        }
        final getter$setter$_ getter$setter$_ = new getter$setter$_();
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .java.lang.Object sharedAttr;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    public final .java.lang.Object getSharedAttr() {
        return sharedAttr;
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    @.com.redhat.ceylon.compiler.java.metadata.Transient
    public final .java.lang.Object getSharedGetter() {
        return new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
    }
    
    public final void setSharedGetter(@.com.redhat.ceylon.compiler.java.metadata.Name("sharedGetter")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object sharedGetter) {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    private final .java.lang.Object method$priv$(@.com.redhat.ceylon.compiler.java.metadata.Name("methodParam")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object methodParam) {
        final .java.lang.Object val = new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
        return val;
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    public final .java.lang.Object sharedMethod(@.com.redhat.ceylon.compiler.java.metadata.Name("methodParam")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object methodParam) {
        final .java.lang.Object val = new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
        return val;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.UnionTypeInfo.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.UnionTypeInfo.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SharedAnnotation$annotation$
public class SharedUnionTypeInfo implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected SharedUnionTypeInfo() {
        super();
    }
    
    public SharedUnionTypeInfo(@.com.redhat.ceylon.compiler.java.metadata.Name("param")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object param) {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.SharedUnionTypeInfo.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.SharedUnionTypeInfo.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class toplevelMethod_ {
    
    private toplevelMethod_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    static .java.lang.Object toplevelMethod(@.com.redhat.ceylon.compiler.java.metadata.Name("param")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object param) {
        return new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Method
public final class sharedToplevelMethod_ {
    
    private sharedToplevelMethod_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    public static .java.lang.Object sharedToplevelMethod(@.com.redhat.ceylon.compiler.java.metadata.Name("param")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object param) {
        return new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Attribute
@.com.redhat.ceylon.compiler.java.metadata.Name("toplevelAttribute")
final class toplevelAttribute_ {
    
    private toplevelAttribute_() {
    }
    private static final .java.lang.Object value;
    private static volatile boolean $init$value = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            value = new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
            $initException$ = null;
            $init$value = true;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            value = null;
            $init$value = false;
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    public static .java.lang.Object get_() {
        if (toplevelAttribute_.$init$value) {
            return value;
        } else {
            if ($initException$ != null) .com.redhat.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'toplevelAttribute\' before it was set");
        }
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Attribute
@.com.redhat.ceylon.compiler.java.metadata.Name("sharedToplevelAttribute")
public final class sharedToplevelAttribute_ {
    
    private sharedToplevelAttribute_() {
    }
    private static final .java.lang.Object value;
    private static volatile boolean $init$value = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            value = new .com.redhat.ceylon.compiler.java.test.annotations.Bar();
            $initException$ = null;
            $init$value = true;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            value = null;
            $init$value = false;
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    public static .java.lang.Object get_() {
        if (sharedToplevelAttribute_.$init$value) {
            return value;
        } else {
            if ($initException$ != null) .com.redhat.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'sharedToplevelAttribute\' before it was set");
        }
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Attribute
@.com.redhat.ceylon.compiler.java.metadata.Name("toplevelGetter")
final class toplevelGetter_ {
    
    private toplevelGetter_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    @.com.redhat.ceylon.compiler.java.metadata.Transient
    public static .java.lang.Object get_() {
        return new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
    }
    
    public static void set_(@.com.redhat.ceylon.compiler.java.metadata.Name("toplevelGetter")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object toplevelGetter) {
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Attribute
@.com.redhat.ceylon.compiler.java.metadata.Name("toplevelSharedGetter")
public final class toplevelSharedGetter_ {
    
    private toplevelSharedGetter_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    @.com.redhat.ceylon.compiler.java.metadata.Transient
    public static .java.lang.Object get_() {
        return new .com.redhat.ceylon.compiler.java.test.annotations.Foo();
    }
    
    public static void set_(@.com.redhat.ceylon.compiler.java.metadata.Name("toplevelSharedGetter")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Foo|com.redhat.ceylon.compiler.java.test.annotations::Bar",
            erased = true)
    final .java.lang.Object toplevelSharedGetter) {
    }
}