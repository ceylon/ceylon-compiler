package com.redhat.ceylon.compiler.java.test.annotations;

@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({
        .java.lang.annotation.ElementType.PARAMETER,
        .java.lang.annotation.ElementType.METHOD})
public @interface Bug1384$annotation$ {
    
    @.com.redhat.ceylon.compiler.java.metadata.DeclarationReference
    public abstract .java.lang.String reference();
}
@.ceylon.language.SharedAnnotation$annotation$
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
public final class Bug1384 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.OptionalAnnotation<.com.redhat.ceylon.compiler.java.test.annotations.Bug1384, .ceylon.language.meta.declaration.ValueDeclaration, .java.lang.Object> {
    
    protected Bug1384() {
        super();
        this.reference = null;
    }
    
    public Bug1384(.com.redhat.ceylon.compiler.java.test.annotations.Bug1384$annotation$ anno) {
        this(.com.redhat.ceylon.compiler.java.runtime.metamodel.Metamodel.<.ceylon.language.meta.declaration.ValueDeclaration>parseMetamodelReference(anno.reference()));
    }
    
    public Bug1384(final .ceylon.language.meta.declaration.ValueDeclaration reference) {
        this.reference = reference;
    }
    private final .ceylon.language.meta.declaration.ValueDeclaration reference;
    
    @.ceylon.language.SharedAnnotation$annotation$
    public final .ceylon.language.meta.declaration.ValueDeclaration getReference() {
        return reference;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Bug1384.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.Bug1384.class);
    
    @.java.lang.Override
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Bug1384$annotation$.class;
    }
}
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({
        .java.lang.annotation.ElementType.PARAMETER,
        .java.lang.annotation.ElementType.METHOD})
public @interface Bug1384_sequence$annotation$ {
    
    @.com.redhat.ceylon.compiler.java.metadata.DeclarationReference
    public abstract .java.lang.String[] references();
}
@.ceylon.language.SharedAnnotation$annotation$
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
public final class Bug1384_sequence implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.OptionalAnnotation<.com.redhat.ceylon.compiler.java.test.annotations.Bug1384_sequence, .ceylon.language.meta.declaration.ValueDeclaration, .java.lang.Object> {
    
    protected Bug1384_sequence() {
        super();
        this.references = null;
    }
    
    public Bug1384_sequence(.com.redhat.ceylon.compiler.java.test.annotations.Bug1384_sequence$annotation$ anno) {
        this(.com.redhat.ceylon.compiler.java.runtime.metamodel.Metamodel.<.ceylon.language.meta.declaration.ValueDeclaration>parseMetamodelReferences(.ceylon.language.meta.declaration.ValueDeclaration.$TypeDescriptor$, anno.references()));
    }
    
    public Bug1384_sequence(final .ceylon.language.Sequential<? extends .ceylon.language.meta.declaration.ValueDeclaration> references) {
        this.references = references;
    }
    private final .ceylon.language.Sequential<? extends .ceylon.language.meta.declaration.ValueDeclaration> references;
    
    @.ceylon.language.SharedAnnotation$annotation$
    public final .ceylon.language.Sequential<? extends .ceylon.language.meta.declaration.ValueDeclaration> getReferences() {
        return references;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Bug1384_sequence.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.Bug1384_sequence.class);
    
    @.java.lang.Override
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Bug1384_sequence$annotation$.class;
    }
}