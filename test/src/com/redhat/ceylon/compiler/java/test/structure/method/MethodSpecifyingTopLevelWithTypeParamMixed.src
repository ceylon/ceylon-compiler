package com.redhat.ceylon.compiler.java.test.structure.method;

class C<X> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    C(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X) {
        this.$reified$X = $reified$X;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X;
    
    public final <Y>X f(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Y, final X x, final Y y) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.method.C.class, $reified$X);
    }
}
class MethodSpecifyingTopLevelWithTypeParamMixed<S, T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    MethodSpecifyingTopLevelWithTypeParamMixed(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$S, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$S = $reified$S;
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$S;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public final .com.redhat.ceylon.compiler.java.test.structure.method.C<.ceylon.language.String> getC() {
        return new .com.redhat.ceylon.compiler.java.test.structure.method.C<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$);
    }
    
    public final .com.redhat.ceylon.compiler.java.test.structure.method.C<S> getC2() {
        return new .com.redhat.ceylon.compiler.java.test.structure.method.C<S>($reified$S);
    }
    
    private final .java.lang.String foo$priv$(final .java.lang.String s, final long i) {
        return getC().<.ceylon.language.Integer>f(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.instance(s), .ceylon.language.Integer.instance(i)).toString();
    }
    
    private final S bar$priv$(final S x, final T y) {
        return getC2().<T>f($reified$T, x, y);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.method.MethodSpecifyingTopLevelWithTypeParamMixed.class, $reified$S, $reified$T);
    }
}