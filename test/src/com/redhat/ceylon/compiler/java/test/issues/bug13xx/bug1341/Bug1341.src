package com.redhat.ceylon.compiler.java.test.issues.bug13xx.bug1341;

final class bug1341_ {
    
    private bug1341_() {
    }
    
    static void bug1341() {
        final .ceylon.language.Array<.ceylon.language.Integer> oa1 = .com.redhat.ceylon.compiler.java.language.ObjectArray<? extends .ceylon.language.Integer>.getArray(.com.redhat.ceylon.compiler.java.Util.fillArray(new .ceylon.language.Integer[.com.redhat.ceylon.compiler.java.Util.toInt(10L)], .ceylon.language.Integer.instance(33L)));
        final .ceylon.language.Callable<? extends .ceylon.language.Sequential<? extends .ceylon.language.String>> oa2 = (
            let
            {
                final .ceylon.language.Array $instance$ = .com.redhat.ceylon.compiler.java.language.ObjectArray<? extends .ceylon.language.String>.getArray(.com.redhat.ceylon.compiler.java.Util.fillArray(new .ceylon.language.String[.com.redhat.ceylon.compiler.java.Util.toInt(10L)], .ceylon.language.String.instance("foo")));
            }
            returning new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequential<? extends .ceylon.language.String>>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$)), .ceylon.language.Empty.$TypeDescriptor$, "String?[]()", (short)-1){
                
                @.java.lang.Override
                public .ceylon.language.Sequential<? extends .ceylon.language.String> $call$() {
                    return (.ceylon.language.Sequential<? extends .ceylon.language.String>)$instance$.sequence();
                }
            };
        );
    }
}