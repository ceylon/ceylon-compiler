package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertIsIntersection implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertIsIntersection() {
    }
    
    public final void m(final .java.lang.Object x) {
        if (x instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.BarInterface) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Foo&BarInterface x"));
        }
        ((.com.redhat.ceylon.compiler.java.test.statement.conditional.Foo)x).common();
        ((.com.redhat.ceylon.compiler.java.test.statement.conditional.Foo)x).foo();
        ((.com.redhat.ceylon.compiler.java.test.statement.conditional.BarInterface)x).bar();
    }
    
    public final void mvar(final .java.lang.Object y) {
        final .java.lang.Object x$4;
        .java.lang.Object x$3 = null;
        if ((x$3 = y) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo && x$3 instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.BarInterface) {
            x$4 = x$3;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Foo&BarInterface x=y"));
        }
        ((.com.redhat.ceylon.compiler.java.test.statement.conditional.Foo)x$4).common();
        ((.com.redhat.ceylon.compiler.java.test.statement.conditional.Foo)x$4).foo();
        ((.com.redhat.ceylon.compiler.java.test.statement.conditional.BarInterface)x$4).bar();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsIntersection.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsIntersection.class);
}