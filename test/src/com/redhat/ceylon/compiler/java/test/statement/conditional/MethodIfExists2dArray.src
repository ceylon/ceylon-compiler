package com.redhat.ceylon.compiler.java.test.statement.conditional;

class MethodIfExists2dArray implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    MethodIfExists2dArray() {
    }
    
    private final void ints$priv$() {
        final .ceylon.language.Array<.ceylon.language.Array<.ceylon.language.Integer>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.ceylon.language.Integer>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.Integer.$TypeDescriptor$), 2L, .ceylon.language.arrayOfSize_.<.ceylon.language.Integer>arrayOfSize(.ceylon.language.Integer.$TypeDescriptor$, 2L, .ceylon.language.Integer.instance(0L)));
        .ceylon.language.Array<.ceylon.language.Integer> r$1;
        if ((r$1 = t.getFromFirst(0L)) != null) {
            final .ceylon.language.Array<.ceylon.language.Integer> r$2 = r$1;
            r$2.set(0L, .ceylon.language.Integer.instance(100L));
        }
    }
    
    private final void strings$priv$() {
        final .ceylon.language.Array<.ceylon.language.Array<.ceylon.language.String>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.ceylon.language.String>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.String.$TypeDescriptor$), 2L, .ceylon.language.arrayOfSize_.<.ceylon.language.String>arrayOfSize(.ceylon.language.String.$TypeDescriptor$, 2L, .ceylon.language.String.instance("")));
        .ceylon.language.Array<.ceylon.language.String> r$4;
        if ((r$4 = t.getFromFirst(0L)) != null) {
            final .ceylon.language.Array<.ceylon.language.String> r$5 = r$4;
            r$5.set(0L, .ceylon.language.String.instance(""));
        }
    }
    
    private final void nulls$priv$() {
        final .ceylon.language.Array<.ceylon.language.Array<.java.lang.Object>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.java.lang.Object>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.Null.$TypeDescriptor$), 2L, .ceylon.language.arrayOfSize_.<.java.lang.Object>arrayOfSize(.ceylon.language.Null.$TypeDescriptor$, 2L, null));
        .ceylon.language.Array<.java.lang.Object> r$7;
        if ((r$7 = t.getFromFirst(0L)) != null) {
            final .ceylon.language.Array<.java.lang.Object> r$8 = r$7;
            r$8.set(0L, null);
        }
    }
    
    private final void objects$priv$(final .java.lang.Object obj) {
        final .ceylon.language.Array<.ceylon.language.Array<.java.lang.Object>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.java.lang.Object>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.Object.$TypeDescriptor$), 2L, .ceylon.language.arrayOfSize_.<.java.lang.Object>arrayOfSize(.ceylon.language.Object.$TypeDescriptor$, 2L, obj));
        .ceylon.language.Array<.java.lang.Object> r$10;
        if ((r$10 = t.getFromFirst(0L)) != null) {
            final .ceylon.language.Array<.java.lang.Object> r$11 = r$10;
            r$11.set(0L, obj);
        }
    }
    
    private final void union$priv$(final .java.lang.Object obj) {
        final .ceylon.language.Array<.ceylon.language.Array<.java.lang.Object>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.java.lang.Object>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)), 2L, .ceylon.language.arrayOfSize_.<.java.lang.Object>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$), 2L, obj));
        .ceylon.language.Array r$13;
        if ((r$13 = (.ceylon.language.Array<.java.lang.Object>)((.ceylon.language.List<? extends .ceylon.language.Array<.java.lang.Object>>)(.ceylon.language.List)t).getFromFirst(0L)) != null) {
            final .ceylon.language.Array r$14 = r$13;
            r$14.set(0L, obj);
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.MethodIfExists2dArray.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.MethodIfExists2dArray.class);
}