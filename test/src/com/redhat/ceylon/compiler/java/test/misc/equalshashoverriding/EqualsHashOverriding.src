package com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding;

class EqualsHashOverriding implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected EqualsHashOverriding() {
        super();
        this.s = null;
    }
    
    EqualsHashOverriding(final .java.lang.String s) {
        this.s = s;
    }
    private final .java.lang.String s;
    
    private final .java.lang.String getS$priv$() {
        return s;
    }
    
    public final void print() {
    }
    
    @.java.lang.Override
    public final boolean equals(final .java.lang.Object that) {
        .java.lang.Object that$1;
        if ((that$1 = that) instanceof .com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding) {
            final .com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding that$2 = (.com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding)that$1;
            return .ceylon.language.String.equals(getS$priv$(), .ceylon.language.String.instance(that$2.getS$priv$()));
        } else {
            return false;
        }
    }
    
    @.java.lang.Override
    public final int hashCode() {
        return (int)(
            let
            {
                long $ceylontmp$hash$4 = .ceylon.language.String.hashCode(getS$priv$());
            }
            returning $ceylontmp$hash$4 ^ $ceylontmp$hash$4 >>> 32;
        );
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding.class);
}
class EqualsHashOverriding2 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected EqualsHashOverriding2() {
        super();
        this.hash = 0L;
    }
    
    EqualsHashOverriding2(final .java.lang.String s) {
        this.hash = 0L;
    }
    private final long hash;
    
    @.java.lang.Override
    public final int hashCode() {
        return (int)(
            let
            {
                long $ceylontmp$hash$5 = hash;
            }
            returning $ceylontmp$hash$5 ^ $ceylontmp$hash$5 >>> 32;
        );
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding2.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding2.class);
}
class EqualsHashOverriding3 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected EqualsHashOverriding3() {
        super();
        this.hash = 0L;
    }
    
    EqualsHashOverriding3(final .java.lang.String s) {
        hash = 0L;
    }
    private final long hash;
    
    @.java.lang.Override
    public final int hashCode() {
        return (int)(
            let
            {
                long $ceylontmp$hash$6 = hash;
            }
            returning $ceylontmp$hash$6 ^ $ceylontmp$hash$6 >>> 32;
        );
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding3.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.misc.equalshashoverriding.EqualsHashOverriding3.class);
}