package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

class ForIfIsIntersection implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ForIfIsIntersection() {
    }
    
    public final void m(final .ceylon.language.Sequential<? extends .java.lang.Object> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> $iterator$0;
                    private .java.lang.Object x;
                    private boolean x$exhausted$;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmp$item$0 = $iterator$0.next();
                        x$exhausted$ = $ceylontmp$item$0 == .ceylon.language.finished_.get_();
                        if (x$exhausted$) {
                            return false;
                        } else {
                            x = $ceylontmp$item$0;
                            return true;
                        }
                    }
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.x()) break ifcomp_1;
                            final .java.lang.Object x = this.x;
                            if (x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                break ifcomp_1;
                            }
                        }
                        return !x$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$1()) {
                            final .java.lang.Object x = this.x;
                            return .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x).common().toString());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> $iterator$0;
                    private .java.lang.Object x;
                    private boolean x$exhausted$;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmp$item$2 = $iterator$0.next();
                        x$exhausted$ = $ceylontmp$item$2 == .ceylon.language.finished_.get_();
                        if (x$exhausted$) {
                            return false;
                        } else {
                            x = $ceylontmp$item$2;
                            return true;
                        }
                    }
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.x()) break ifcomp_1;
                            final .java.lang.Object x = this.x;
                            if (x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                break ifcomp_1;
                            }
                        }
                        return !x$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$1()) {
                            final .java.lang.Object x = this.x;
                            return .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x).foo().toString());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> $iterator$0;
                    private .java.lang.Object x;
                    private boolean x$exhausted$;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmp$item$4 = $iterator$0.next();
                        x$exhausted$ = $ceylontmp$item$4 == .ceylon.language.finished_.get_();
                        if (x$exhausted$) {
                            return false;
                        } else {
                            x = $ceylontmp$item$4;
                            return true;
                        }
                    }
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.x()) break ifcomp_1;
                            final .java.lang.Object x = this.x;
                            if (x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                break ifcomp_1;
                            }
                        }
                        return !x$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$1()) {
                            final .java.lang.Object x = this.x;
                            return .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface)x).bar().toString());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
    
    public final void mvar(final .ceylon.language.Sequential<? extends .java.lang.Object> ys) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = ys.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> $iterator$0;
                    private .java.lang.Object y;
                    private boolean y$exhausted$;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmp$item$6 = $iterator$0.next();
                        y$exhausted$ = $ceylontmp$item$6 == .ceylon.language.finished_.get_();
                        if (y$exhausted$) {
                            return false;
                        } else {
                            y = $ceylontmp$item$6;
                            return true;
                        }
                    }
                    private .java.lang.Object x$8;
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.y()) break ifcomp_1;
                            final .java.lang.Object y = this.y;
                            .java.lang.Object x$7 = null;
                            if ((x$7 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x$7 instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                x$8 = x$7;
                                break ifcomp_1;
                            }
                        }
                        return !y$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$1()) {
                            final .java.lang.Object x$8 = this.x$8;
                            final .java.lang.Object y = this.y;
                            return .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x$8).common().toString());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = ys.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> $iterator$0;
                    private .java.lang.Object y;
                    private boolean y$exhausted$;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmp$item$9 = $iterator$0.next();
                        y$exhausted$ = $ceylontmp$item$9 == .ceylon.language.finished_.get_();
                        if (y$exhausted$) {
                            return false;
                        } else {
                            y = $ceylontmp$item$9;
                            return true;
                        }
                    }
                    private .java.lang.Object x$11;
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.y()) break ifcomp_1;
                            final .java.lang.Object y = this.y;
                            .java.lang.Object x$10 = null;
                            if ((x$10 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x$10 instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                x$11 = x$10;
                                break ifcomp_1;
                            }
                        }
                        return !y$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$1()) {
                            final .java.lang.Object x$11 = this.x$11;
                            final .java.lang.Object y = this.y;
                            return .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x$11).foo().toString());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                    {
                        $iterator$0 = ys.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> $iterator$0;
                    private .java.lang.Object y;
                    private boolean y$exhausted$;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmp$item$12 = $iterator$0.next();
                        y$exhausted$ = $ceylontmp$item$12 == .ceylon.language.finished_.get_();
                        if (y$exhausted$) {
                            return false;
                        } else {
                            y = $ceylontmp$item$12;
                            return true;
                        }
                    }
                    private .java.lang.Object x$14;
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.y()) break ifcomp_1;
                            final .java.lang.Object y = this.y;
                            .java.lang.Object x$13 = null;
                            if ((x$13 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x$13 instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                x$14 = x$13;
                                break ifcomp_1;
                            }
                        }
                        return !y$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$1()) {
                            final .java.lang.Object x$14 = this.x$14;
                            final .java.lang.Object y = this.y;
                            return .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface)x$14).bar().toString());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsIntersection.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsIntersection.class);
}