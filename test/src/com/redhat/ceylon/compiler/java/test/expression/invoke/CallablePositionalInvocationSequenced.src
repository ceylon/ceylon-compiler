package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callablePositionalInvocationSequenced_f_ {
    
    private callablePositionalInvocationSequenced_f_() {
    }
    
    static void callablePositionalInvocationSequenced_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
        foo.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L));
        foo.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L), (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("")}, .ceylon.language.empty_.get_()));
        foo.$callvariadic$((.java.lang.Object).ceylon.language.Integer.instance(1L), (.ceylon.language.Sequence).com.redhat.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.String.instance(""),
                .ceylon.language.String.instance("")}, .ceylon.language.empty_.get_()));
        foo.$callvariadic$(.ceylon.language.Integer.instance(1L), (.ceylon.language.Sequential<? extends .ceylon.language.String>)(.ceylon.language.Sequential).ceylon.language.empty_.get_());
    }
}