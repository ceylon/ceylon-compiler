package com.redhat.ceylon.compiler.java.test.structure.klass;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class MajikNullaryCtor implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtor() {
        super();
        this.i = 0L;
        this.c = 0;
        this.b = false;
        this.o = 0;
        this.f = 0.0;
    }
    
    MajikNullaryCtor(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i, @.com.redhat.ceylon.compiler.java.metadata.Name("c")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Character")
    final int c, @.com.redhat.ceylon.compiler.java.metadata.Name("b")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Boolean")
    final boolean b, @.com.redhat.ceylon.compiler.java.metadata.Name("o")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Byte")
    final byte o, @.com.redhat.ceylon.compiler.java.metadata.Name("f")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Float")
    final double f) {
        this.i = i;
        this.c = c;
        this.b = b;
        this.o = o;
        this.f = f;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final long i;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    public final long getI() {
        return i;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final int c;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Character")
    public final int getC() {
        return c;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final boolean b;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Boolean")
    public final boolean getB() {
        return b;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final byte o;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Byte")
    public final byte getO() {
        return o;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final double f;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Float")
    public final double getF() {
        return f;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtor.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtor.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.AbstractAnnotation$annotation$
abstract class MajikNullaryCtorAbstract implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorAbstract() {
        super();
    }
    
    MajikNullaryCtorAbstract(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorAbstract.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorAbstract.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class MajikNullaryCtorNullary implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    MajikNullaryCtorNullary() {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorNullary.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorNullary.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(extendsType = "com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorNullary")
class MajikNullaryCtorNullarySuper extends .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorNullary {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorNullarySuper() {
        super();
    }
    
    MajikNullaryCtorNullarySuper(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
        super();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorNullarySuper.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorNullarySuper.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class MajikNullaryCtorDefaulted implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    MajikNullaryCtorDefaulted() {
        (
            let
            {
                long $ceylontmp$i$0 = .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorDefaulted.$default$i();
                this($ceylontmp$i$0);
            }
            returning null;
        );
    }
    
    MajikNullaryCtorDefaulted(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.Defaulted
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static long $default$i() {
        return 0L;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorDefaulted.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorDefaulted.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(extendsType = "com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorDefaulted")
class MajikNullaryCtorDefaultedSub extends .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorDefaulted {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorDefaultedSub() {
        super();
    }
    
    MajikNullaryCtorDefaultedSub(@.com.redhat.ceylon.compiler.java.metadata.Name("j")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long j) {
        super(0L);
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorDefaultedSub.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorDefaultedSub.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class MajikNullaryCtorSequenced implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    MajikNullaryCtorSequenced() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$va$1 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                this($ceylontmp$va$1);
            }
            returning null;
        );
    }
    
    MajikNullaryCtorSequenced(@.com.redhat.ceylon.compiler.java.metadata.Name("va")
    @.com.redhat.ceylon.compiler.java.metadata.Sequenced
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer[]")
    final .ceylon.language.Sequential<? extends .ceylon.language.Integer> va) {
        this.va = va;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .ceylon.language.Sequential<? extends .ceylon.language.Integer> va;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer[]")
    public final .ceylon.language.Sequential<? extends .ceylon.language.Integer> getVa() {
        return va;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorSequenced.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorSequenced.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
class MajikNullaryCtorSequencedNonempty implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorSequencedNonempty() {
        super();
        this.va = null;
    }
    
    MajikNullaryCtorSequencedNonempty(@.com.redhat.ceylon.compiler.java.metadata.Name("va")
    @.com.redhat.ceylon.compiler.java.metadata.Sequenced
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("[ceylon.language::Integer+]")
    final .ceylon.language.Sequence<? extends .ceylon.language.Integer> va) {
        this.va = va;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .ceylon.language.Sequence<? extends .ceylon.language.Integer> va;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("[ceylon.language::Integer+]")
    public final .ceylon.language.Sequence<? extends .ceylon.language.Integer> getVa() {
        return va;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorSequencedNonempty.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorSequencedNonempty.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "T",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
class MajikNullaryCtorGeneric<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorGeneric(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        super();
        this.$reified$T = $reified$T;
        this.i = 0L;
    }
    
    MajikNullaryCtorGeneric(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, @.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
        this.$reified$T = $reified$T;
        this.i = i;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final long i;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.DefaultAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    public long getI() {
        return i;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorGeneric.class, $reified$T);
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(extendsType = "com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorGeneric<ceylon.language::String>")
class MajikNullaryCtorGenericSub extends .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorGeneric<.ceylon.language.String> {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorGenericSub() {
        super(.ceylon.language.String.$TypeDescriptor$);
        this.i = 0L;
    }
    
    MajikNullaryCtorGenericSub(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
        super(.ceylon.language.String.$TypeDescriptor$, i);
        this.i = i;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final long i;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.ActualAnnotation$annotation$
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    public final long getI() {
        return i;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorGenericSub.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorGenericSub.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::Category<ceylon.language::String>"})
class MajikNullaryCtorMixin implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Category<.ceylon.language.String>, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorMixin() {
        super();
        this.$ceylon$language$Category$this$ = new .ceylon.language.Category$impl<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, this);
        this.i = 0L;
    }
    
    MajikNullaryCtorMixin(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
        this.i = i;
        this.$ceylon$language$Category$this$ = new .ceylon.language.Category$impl<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, this);
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final long i;
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    public final long getI() {
        return i;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected final .ceylon.language.Category$impl<.ceylon.language.String> $ceylon$language$Category$this$;
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .ceylon.language.Category$impl<? super .ceylon.language.String> $ceylon$language$Category$impl() {
        return $ceylon$language$Category$this$;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public boolean containsEvery(final .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object> elements) {
        return $ceylon$language$Category$this$.containsEvery(elements);
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public boolean containsAny(final .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object> elements) {
        return $ceylon$language$Category$this$.containsAny(elements);
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.ActualAnnotation$annotation$
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Boolean")
    public final boolean contains(@.com.redhat.ceylon.compiler.java.metadata.Name("element")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    final .ceylon.language.String element) {
        return true;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorMixin.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorMixin.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::Category<ceylon.language::String>"})
@.com.redhat.ceylon.compiler.java.metadata.Class(extendsType = "com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorMixin")
class MajikNullaryCtorMixinSub extends .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorMixin implements .ceylon.language.Category<.ceylon.language.String> {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorMixinSub() {
        super();
    }
    
    MajikNullaryCtorMixinSub(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
        super(i);
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorMixinSub.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorMixinSub.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(constructors = true)
class MajikNullaryCtorValueCtor implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.ConstructorName("val")
    private static final class val_ {
        
        private val_() {
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.Name("val")
    @.com.redhat.ceylon.compiler.java.metadata.Enumerated
    private MajikNullaryCtorValueCtor(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtor.val_ $name$) {
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtor val;
    static {
        val = new MajikNullaryCtorValueCtor((.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtor.val_)null);
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Enumerated
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorValueCtor.val")
    @.com.redhat.ceylon.compiler.java.metadata.Name("val")
    public static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtor getMajikNullaryCtorValueCtor$val() {
        return val;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtor.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtor.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(constructors = true)
class MajikNullaryCtorValueCtorAndDefault implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.ceylon.language.SharedAnnotation$annotation$
    public MajikNullaryCtorValueCtorAndDefault() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.ConstructorName("val")
    private static final class val_ {
        
        private val_() {
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.Name("val")
    @.com.redhat.ceylon.compiler.java.metadata.Enumerated
    private MajikNullaryCtorValueCtorAndDefault(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndDefault.val_ $name$) {
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndDefault val;
    static {
        val = new MajikNullaryCtorValueCtorAndDefault((.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndDefault.val_)null);
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Enumerated
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorValueCtorAndDefault.val")
    @.com.redhat.ceylon.compiler.java.metadata.Name("val")
    public static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndDefault getMajikNullaryCtorValueCtorAndDefault$val() {
        return val;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndDefault.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndDefault.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(constructors = true)
class MajikNullaryCtorValueCtorAndCallable implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorValueCtorAndCallable() {
        super();
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable.callable_ callable_ = null;
    
    @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.ConstructorName("callable")
    public static final class callable_ {
        
        private callable_() {
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.Name("callable")
    public MajikNullaryCtorValueCtorAndCallable(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable.callable_ $name$) {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.ConstructorName("val")
    private static final class val_ {
        
        private val_() {
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.Name("val")
    @.com.redhat.ceylon.compiler.java.metadata.Enumerated
    private MajikNullaryCtorValueCtorAndCallable(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable.val_ $name$) {
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable val;
    static {
        val = new MajikNullaryCtorValueCtorAndCallable((.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable.val_)null);
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Enumerated
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorValueCtorAndCallable.val")
    @.com.redhat.ceylon.compiler.java.metadata.Name("val")
    public static final .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable getMajikNullaryCtorValueCtorAndCallable$val() {
        return val;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorAndCallable.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.AbstractAnnotation$annotation$
@.com.redhat.ceylon.compiler.java.metadata.CaseTypes({"com.redhat.ceylon.compiler.java.test.structure.klass::majikNullaryCtorValueCtorOf"})
abstract class MajikNullaryCtorValueCtorOf implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    MajikNullaryCtorValueCtorOf(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorOf.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorOf.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Name("majikNullaryCtorValueCtorOf")
@.com.redhat.ceylon.compiler.java.metadata.Object
@.com.redhat.ceylon.compiler.java.metadata.Class(extendsType = "com.redhat.ceylon.compiler.java.test.structure.klass::MajikNullaryCtorValueCtorOf")
final class majikNullaryCtorValueCtorOf_ extends .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorValueCtorOf {
    
    private majikNullaryCtorValueCtorOf_() {
        super(1L);
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private .java.lang.Object readResolve() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.majikNullaryCtorValueCtorOf_.get_();
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.majikNullaryCtorValueCtorOf_.class);
    private static final .com.redhat.ceylon.compiler.java.test.structure.klass.majikNullaryCtorValueCtorOf_ value;
    private static volatile boolean $init$value = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            value = new .com.redhat.ceylon.compiler.java.test.structure.klass.majikNullaryCtorValueCtorOf_();
            $initException$ = null;
            $init$value = true;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            value = null;
            $init$value = false;
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.klass::majikNullaryCtorValueCtorOf")
    static .com.redhat.ceylon.compiler.java.test.structure.klass.majikNullaryCtorValueCtorOf_ get_() {
        if (majikNullaryCtorValueCtorOf_.$init$value) {
            return value;
        } else {
            if ($initException$ != null) .com.redhat.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'majikNullaryCtorValueCtorOf\' before it was set");
        }
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.majikNullaryCtorValueCtorOf_.$TypeDescriptor$;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SerializableAnnotation$annotation$
class MajikNullaryCtorSer implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable, .com.redhat.ceylon.compiler.java.runtime.serialization.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected MajikNullaryCtorSer() {
        this((.com.redhat.ceylon.compiler.java.runtime.serialization.$Serialization$)null);
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public MajikNullaryCtorSer(final .com.redhat.ceylon.compiler.java.runtime.serialization.$Serialization$ ignored) {
    }
    
    MajikNullaryCtorSer(@.com.redhat.ceylon.compiler.java.metadata.Name("i")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final long i) {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorSer.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.MajikNullaryCtorSer.class);
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .java.util.Collection<.ceylon.language.serialization.ReachableReference> $references$() {
        .java.util.Collection<.ceylon.language.serialization.ReachableReference> reference = new .java.util.ArrayList<.ceylon.language.serialization.ReachableReference>();
        return reference;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .java.lang.Object $get$(final .ceylon.language.serialization.ReachableReference reference) {
        switch (((.ceylon.language.serialization.Member)reference).getAttribute().getQualifiedName()) {
        default: 
            throw new .java.lang.RuntimeException("unknown attribute");
        
        }
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public void $set$(final .ceylon.language.serialization.ReachableReference reference, final .java.lang.Object instance) {
        if (reference instanceof .ceylon.language.serialization.Member) switch (((.ceylon.language.serialization.Member)reference).getAttribute().getQualifiedName()) {
        default: 
            throw new .java.lang.RuntimeException("unknown attribute");
        
        } else throw new .ceylon.language.AssertionError("unexpected reachable reference " + reference);
    }
}