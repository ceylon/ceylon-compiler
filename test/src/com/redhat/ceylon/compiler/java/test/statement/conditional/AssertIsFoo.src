package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertIsFoo implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertIsFoo() {
    }
    
    public final void m(final .java.lang.Object x) {
        final .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo x$2;
        .java.lang.Object x$1 = null;
        if ((x$1 = x) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo) {
            x$2 = (.com.redhat.ceylon.compiler.java.test.statement.conditional.Foo)x$1;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Foo x"));
        }
        x$2.foo();
        final .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub x$5;
        .java.lang.Object x$4 = null;
        if ((x$4 = x$2) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub) {
            x$5 = (.com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub)x$4;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is FooSub x"));
        }
        x$5.foo2();
    }
    
    public final void mvar(final .java.lang.Object y) {
        final .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo x$8;
        .java.lang.Object x$7 = null;
        if ((x$7 = y) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo) {
            x$8 = (.com.redhat.ceylon.compiler.java.test.statement.conditional.Foo)x$7;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Foo x=y"));
        }
        x$8.foo();
        final .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub z$11;
        .java.lang.Object z$10 = null;
        if ((z$10 = x$8) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub) {
            z$11 = (.com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub)z$10;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is FooSub z=x"));
        }
        z$11.foo2();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsFoo.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsFoo.class);
}