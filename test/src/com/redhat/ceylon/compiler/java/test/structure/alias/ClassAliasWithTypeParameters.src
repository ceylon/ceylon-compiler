package com.redhat.ceylon.compiler.java.test.structure.alias;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SharedAnnotation$annotation$
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "T",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
public class ClassAliasWithTypeParameters_Foo<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Jpa
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected ClassAliasWithTypeParameters_Foo(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        super();
        this.$reified$T = $reified$T;
    }
    
    public ClassAliasWithTypeParameters_Foo(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, @.com.redhat.ceylon.compiler.java.metadata.Name("t")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("T")
    final T t) {
        this.$reified$T = $reified$T;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo.class, $reified$T);
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SharedAnnotation$annotation$
@.com.redhat.ceylon.compiler.java.metadata.Alias("com.redhat.ceylon.compiler.java.test.structure.alias::ClassAliasWithTypeParameters_Foo<T>")
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "T",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
public final class ClassAliasWithTypeParameters<T> {
    
    private ClassAliasWithTypeParameters() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    @.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
            value = "T",
            variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
            satisfies = {},
            caseTypes = {})})
    public static <T>.com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo<T> ClassAliasWithTypeParameters$aliased$(@.com.redhat.ceylon.compiler.java.metadata.Name("t")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("T")
    final T t) {
        throw new .ceylon.language.Exception();
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.ceylon.language.SharedAnnotation$annotation$
@.com.redhat.ceylon.compiler.java.metadata.Alias("com.redhat.ceylon.compiler.java.test.structure.alias::ClassAliasWithTypeParameters_Foo<ceylon.language::Integer>")
public final class ClassAliasWithTypeParameters2 {
    
    private ClassAliasWithTypeParameters2() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static .com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo<.ceylon.language.Integer> ClassAliasWithTypeParameters2$aliased$(@.com.redhat.ceylon.compiler.java.metadata.Name("t")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
    final .ceylon.language.Integer t) {
        throw new .ceylon.language.Exception();
    }
}
final class classAliasWithTypeParametersMethod_ {
    
    private classAliasWithTypeParametersMethod_() {
    }
    
    static void classAliasWithTypeParametersMethod() {
        final .com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo<.ceylon.language.Integer> foo = new .com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L));
        final .com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo<.ceylon.language.Integer> foo2 = new .com.redhat.ceylon.compiler.java.test.structure.alias.ClassAliasWithTypeParameters_Foo<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L));
    }
}