package com.redhat.ceylon.compiler.java.test.issues.bug04xx;

class Bug406 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Bug406() {
    }
    
    private final void test$priv$() {
        final .ceylon.language.Sequential<? extends .ceylon.language.String> full = (.ceylon.language.Sequence<? extends .ceylon.language.String>).ceylon.language.Tuple.instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.String.instance("hello"),
                .ceylon.language.String.instance("world")});
        final .ceylon.language.Sequential<? extends .ceylon.language.String> spread1 = (
            let
            {
                final .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object> spread$0$iterable$ = full;
            }
            returning new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$){
                
                @.java.lang.Override
                public final .ceylon.language.Iterator<? extends .ceylon.language.String> iterator() {
                    return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                        final .ceylon.language.Iterator<? extends .ceylon.language.String> spread$0$iterator$ = spread$0$iterable$.iterator();
                        
                        @.java.lang.Override
                        public final .java.lang.Object next() {
                            .java.lang.Object spread$0$element$;
                            if (!((spread$0$element$ = spread$0$iterator$.next()) instanceof .ceylon.language.Finished)) {
                                spread$0$element$ = .ceylon.language.String.instance(((.ceylon.language.String)spread$0$element$).getUppercased());
                            }
                            return spread$0$element$;
                        }
                    };
                }
            }.sequence();
        );
        .ceylon.language.String s1s$2;
        if ((s1s$2 = spread1.getFromFirst(0L)) != null) {
            final .java.lang.String s1s$3 = s1s$2.toString();
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug04xx.Bug406.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug04xx.Bug406.class);
}