package com.redhat.ceylon.compiler.java.test.annotations;

@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({})
public @interface EnumeratedReference_X$annotation$ {
    
    public abstract .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y$annotation$ y();
}
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({
        .java.lang.annotation.ElementType.PARAMETER,
        .java.lang.annotation.ElementType.METHOD})
public @interface EnumeratedReference_X$annotations$ {
    
    public abstract .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X$annotation$[] value();
}
@.ceylon.language.SharedAnnotation$annotation$
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
public final class EnumeratedReference_X implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.SequencedAnnotation<.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X, .ceylon.language.meta.declaration.FunctionDeclaration, .java.lang.Object> {
    
    protected EnumeratedReference_X() {
        super();
        this.y = null;
    }
    
    public EnumeratedReference_X(.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X$annotation$ anno) {
        this(new .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y(anno.y()));
    }
    
    public EnumeratedReference_X(final .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y y) {
        this.y = y;
    }
    private final .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y y;
    
    @.ceylon.language.SharedAnnotation$annotation$
    public final .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y getY() {
        return y;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X.class);
    
    @.java.lang.Override
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X$annotation$.class;
    }
}
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({})
public @interface EnumeratedReference_Y$annotation$ {
    
    @.com.redhat.ceylon.compiler.java.metadata.EnumerationReference
    public abstract .java.lang.Class<? extends .ceylon.language.Comparison> c();
}
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({
        .java.lang.annotation.ElementType.PARAMETER,
        .java.lang.annotation.ElementType.METHOD})
public @interface EnumeratedReference_Y$annotations$ {
    
    public abstract .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y$annotation$[] value();
}
@.ceylon.language.SharedAnnotation$annotation$
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
public final class EnumeratedReference_Y implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.SequencedAnnotation<.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y, .ceylon.language.meta.declaration.FunctionDeclaration, .java.lang.Object> {
    
    protected EnumeratedReference_Y() {
        super();
    }
    
    public EnumeratedReference_Y(.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y$annotation$ anno) {
        this(.com.redhat.ceylon.compiler.java.runtime.metamodel.Metamodel.parseEnumerationReference(anno.c()));
    }
    
    public EnumeratedReference_Y(final .ceylon.language.Comparison c) {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y.class);
    
    @.java.lang.Override
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y$annotation$.class;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {0},
        primary = .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X.class)
final class enumeratedReference_z_ {
    
    private enumeratedReference_z_() {
    }
    
    static .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X enumeratedReference_z() {
        return (
            let
            {
                .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y $ceylontmp$y$0 = .com.redhat.ceylon.compiler.java.test.annotations.enumeratedReference_z_.enumeratedReference_z$y();
            }
            returning enumeratedReference_z($ceylontmp$y$0);
        );
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.AnnotationInstantiation(
            arguments = {-32768},
            primary = .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y.class)
    @.com.redhat.ceylon.compiler.java.metadata.ObjectExprs({@.com.redhat.ceylon.compiler.java.metadata.ObjectValue(
            name = "$arg$c",
            value = .ceylon.language.smaller_.class)})
    public static final .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y enumeratedReference_z$y() {
        return new .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y(.ceylon.language.smaller_.get_());
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X enumeratedReference_z(final .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y y) {
        return new .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X(y);
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Method
@.com.redhat.ceylon.compiler.java.metadata.AnnotationInstantiationTree({
        @.com.redhat.ceylon.compiler.java.metadata.AnnotationInstantiation(
                arguments = {-1},
                primary = .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X.class),
        @.com.redhat.ceylon.compiler.java.metadata.AnnotationInstantiation(
                arguments = {-32768},
                primary = .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y.class)})
@.com.redhat.ceylon.compiler.java.metadata.ObjectExprs({@.com.redhat.ceylon.compiler.java.metadata.ObjectValue(
        name = "$arg$y$$arg$c",
        value = .ceylon.language.smaller_.class)})
final class enumeratedReference_zz_ {
    
    private enumeratedReference_zz_() {
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.annotations::EnumeratedReference_X")
    static .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X enumeratedReference_zz() {
        return new .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X(new .com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y(.ceylon.language.smaller_.get_()));
    }
}
public final class enumeratedReference_callsite_ {
    
    private enumeratedReference_callsite_() {
    }
    
    @.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X$annotations$({
            @.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X$annotation$(y = @.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y$annotation$(c = .ceylon.language.smaller_.class)),
            @.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_X$annotation$(y = @.com.redhat.ceylon.compiler.java.test.annotations.EnumeratedReference_Y$annotation$(c = .ceylon.language.smaller_.class))})
    @.ceylon.language.SharedAnnotation$annotation$
    public static void enumeratedReference_callsite() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.annotations.enumeratedReference_callsite_.enumeratedReference_callsite();
    }
}