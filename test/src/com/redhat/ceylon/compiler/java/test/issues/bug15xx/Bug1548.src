package com.redhat.ceylon.compiler.java.test.issues.bug15xx;

final class bug1548_ {
    
    private bug1548_() {
    }
    
    static void bug1548() {
        final .ceylon.language.Iterable values = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.java.lang.Object, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.null_.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 5, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return .ceylon.language.Integer.instance(100L);
                
                case 1: 
                    return .ceylon.language.Integer.instance(110L);
                
                case 2: 
                    return .ceylon.language.Integer.instance(120L);
                
                case 3: 
                    return null;
                
                case 4: 
                    return .ceylon.language.String.instance("a");
                
                default: 
                    return null;
                
                }
            }
        };
        final .ceylon.language.Iterable<? extends .ceylon.language.Callable<? extends .java.lang.Object>, ? extends .java.lang.Object> funcs = new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Callable<? extends .java.lang.Object>, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), .ceylon.language.Empty.$TypeDescriptor$), .ceylon.language.Null.$TypeDescriptor$){
            
            public final .ceylon.language.Iterator<.ceylon.language.Callable<? extends .java.lang.Object>> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Callable<? extends .java.lang.Object>>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), .ceylon.language.Empty.$TypeDescriptor$)){
                    {
                        $iterator$0 = values.iterator();
                    }
                    private final .ceylon.language.Iterator $iterator$0;
                    private .java.lang.Object v;
                    private boolean v$exhausted$;
                    
                    private final boolean v() {
                        final .java.lang.Object $ceylontmp$item$0 = $iterator$0.next();
                        v$exhausted$ = $ceylontmp$item$0 == .ceylon.language.finished_.get_();
                        if (v$exhausted$) {
                            return false;
                        } else {
                            v = $ceylontmp$item$0;
                            return true;
                        }
                    }
                    private .java.lang.Object v2$2;
                    
                    private final boolean $next$1() {
                        ifcomp_1: while (true) {
                            if (!this.v()) break ifcomp_1;
                            final .java.lang.Object v = this.v;
                            .java.lang.Object v2$1 = null;
                            if ((v2$1 = v) != null) {
                                v2$2 = v2$1;
                                break ifcomp_1;
                            }
                        }
                        return !v$exhausted$;
                    }
                    private long v3$4;
                    
                    private final boolean $next$2() {
                        ifcomp_2: while (true) {
                            if (!this.$next$1()) break ifcomp_2;
                            final .java.lang.Object v2$2 = this.v2$2;
                            final .java.lang.Object v = this.v;
                            .java.lang.Object v3$3 = null;
                            if ((v3$3 = v2$2) instanceof .ceylon.language.Integer) {
                                v3$4 = ((.ceylon.language.Integer)v3$3).longValue();
                                break ifcomp_2;
                            }
                        }
                        return !v$exhausted$;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.$next$2()) {
                            final long v3$4 = this.v3$4;
                            final .java.lang.Object v2$2 = this.v2$2;
                            final .java.lang.Object v = this.v;
                            return new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), .ceylon.language.Empty.$TypeDescriptor$, "<Integer|String>()", (short)-1){
                                
                                @.java.lang.Override
                                public .java.lang.Object $call$() {
                                    return v2$2;
                                }
                            };
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        };
    }
}