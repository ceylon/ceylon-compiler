package com.redhat.ceylon.compiler.java.test.expression.operator;

public class Parenthesized implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Parenthesized() {
    }
    
    private final long m$priv$() {
        final double f = (2.0E300 + (1.0 - 1.0)) / 3L;
        final long f2 = .ceylon.language.Integer.power(2L, m$priv$() + 1L);
        return 1000000L / (m$priv$() + 1L);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.operator.Parenthesized();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.Parenthesized.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.operator.Parenthesized.class);
}