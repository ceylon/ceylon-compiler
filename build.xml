<project name="Ceylon compiler" default="all" basedir=".">

  <property file="build.properties"/>	

  <property name="name" value="Ceylon compiler"/>
  <property name="ceylon.repo.dir" location="${user.home}/.ceylon/repo"/>
  <property name="ceylon.typechecker.dir" value="com/redhat/ceylon/typechecker/${module.com.redhat.ceylon.typechecker.version}"/>
  <property name="ceylon.typechecker.jar" value="${ceylon.typechecker.dir}/com.redhat.ceylon.typechecker-${module.com.redhat.ceylon.typechecker.version}.jar"/>
  <property name="ceylon.typechecker.lib" location="${ceylon.repo.dir}/${ceylon.typechecker.jar}"/>
  <property name="ceylon.runtime.dir" value="ceylon/language/${module.ceylon.language.version}"/>
  <property name="ceylon.runtime.car" value="${ceylon.runtime.dir}/ceylon.language-${module.ceylon.language.version}.car"/>
  <property name="ceylon.runtime.lib" location="${ceylon.repo.dir}/${ceylon.runtime.car}"/>

  <!-- The Java source files for the compiler -->
  <property name="javac.src" location="langtools/src/share/classes"/>
  <property name="ceylonc.src" location="src"/>
  <property name="test.src" location="test-src"/>

  <!-- Directories everything gets built into -->
  <property name="build" location="build"/>
  <property name="build.classes" location="${build}/classes"/>
  <property name="build.ceylon.cars" location="${build}/ceylon-cars"/>
  <property name="build.lib" location="${build}/lib"/>
  <property name="build.dist" location="${build}/dist"/>
  <property name="test.reports" location="${build}/test-reports"/>

  <property name="markdown.lib" location="${base.path}/markdownj-core-faf3bf83000.jar"/>

  <!-- Jarfiles everything ends up in -->
  <property name="ceylon.compiler.dir" value="com/redhat/ceylon/compiler/${module.com.redhat.ceylon.compiler.version}"/>
  <property name="ceylon.compiler.jar" value="${ceylon.compiler.dir}/com.redhat.ceylon.compiler-${module.com.redhat.ceylon.compiler.version}.jar"/>
  <property name="ceylon.compiler.lib" location="${ceylon.repo.dir}/${ceylon.compiler.jar}"/>
  <property name="ceylon.compiler.repo" value="${ceylon.repo.dir}/${ceylon.compiler.dir}"/>
  <property name="ceylon.compiler.dist" value="${build.dist}/${ceylon.compiler.dir}"/>
  <property name="ceylon-tests.dir" location="${build.ceylon.cars}/com/redhat/ceylon/compiler/test/ceylon/${module.com.redhat.ceylon.compiler.version}"/>
  <property name="ceylon-tests.car" location="${ceylon-tests.dir}/com.redhat.ceylon.compiler.test.ceylon-${module.com.redhat.ceylon.compiler.version}.car"/>

  <!-- The directory that parser tests live in, and
       the directory test results get written into -->
  <property name="parser.test.src" location="corpus/tests"/>
  <property name="parser.test.dst" location="${build}/test/parser"/>

  <path id="compiler.classpath">
    <pathelement path="${ceylon.typechecker.lib}"/>
    <pathelement path="${antlr.lib}"/>
    <pathelement path="${markdown.lib}"/>
  </path>

  <path id="test.compile.classpath">
    <path refid="compiler.classpath"/>
    <pathelement path="${ceylon.runtime.lib}"/>
    <pathelement path="${build.classes}"/>
    <pathelement path="${junit.lib}"/>
  </path>

  <path id="test.run.classpath">
    <path refid="compiler.classpath"/>
    <pathelement path="${ceylon.compiler.lib}"/>
    <pathelement path="${ceylon.runtime.lib}"/>
    <pathelement path="${junit.lib}"/>
    <pathelement path="${build.classes}"/>
    <pathelement path="${ceylon-tests.car}"/>
  </path>

  <path id="runtime.classpath">
    <pathelement path="${runtime.jar}"/>
    <pathelement path="${build.classes}"/>
  </path>

  <!-- ################################################################## -->

  <!-- constant to declare a file binary for checksumsum -->
  <property name="checksum.binary-prefix" value=" *" />
  <!-- Helper target, used to create a sha1 checksum file  -->
  <!-- Requires 'file' as a parameter. -->
  <target name="sha1sum">
    <fail unless="file"/>
    <fail if="filename"/>
    <fail if="value"/>
    <basename file="${file}" property="filename"/>
    <checksum file="${file}" property="value" algorithm="sha1"/>
    <echo file="${file}.sha1" message="${value}${checksum.binary-prefix}${filename}"/>
  </target>

  <!-- Rule to clean everything up -->
  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${antlr.dst}"/>
  </target>

  <!-- Repository targets -->
  <target name="init.repo"
      description="Initialize the default local Ceylon module repository">
    <mkdir dir="${ceylon.compiler.repo}"/>
  </target>
  <target name="clean.repo"
     description="Clean default local Ceylon module repository">
    <delete dir="${ceylon.compiler.repo}"/>
  </target>

  <target name="dist" depends="compiler.classes"
    description="Create Ceylon compiler distribution">
    <zip destfile="${build.dist}/${ceylon.compiler.jar}">
      <fileset dir="${build.classes}">
        <exclude name="ceylon/**"/>
        <exclude name="com/redhat/ceylon/compiler/test/**"/>
      </fileset>
      <fileset dir="${javac.src}">
        <include name="com/sun/tools/javac/resources/*.properties"/>
      </fileset>
    </zip>
    <antcall target="sha1sum">
      <param name="file" value="${build.dist}/${ceylon.compiler.jar}" />
    </antcall>    
  </target>

  <target name="publish"
     depends="dist,clean.repo,init.repo"
     description="Publish Ceylon compiler module to default repo">
     <copy todir="${ceylon.compiler.repo}">
        <fileset dir="${ceylon.compiler.dist}"/>
    </copy>
  </target>

  <!-- Rule to compile and test -->
  <target name="all" depends="test"/>

  <!-- Rule to build compiler classes from their Java sources -->
  <target name="compiler.classes">
    <mkdir dir="${build.classes}"/>
    <javac
       srcdir="${javac.src}:${ceylonc.src}"
       destdir="${build.classes}"
       debug="true"
       classpathref="compiler.classpath"
       includeantruntime="true">
      <include name="com/redhat/**"/>
      <include name="com/sun/tools/javac/**"/>
      <include name="com/sun/source/**"/>
    </javac>
  	<copy todir="${build.classes}">
      <fileset dir="${ceylonc.src}">
        <include name="com/redhat/**/resources/**"/>
      </fileset>
  	</copy>
  </target>

  <!-- Rule to build compiler test classes from their Java sources -->
  <target name="test.classes" depends="compiler.classes">
    <mkdir dir="${build.classes}"/>
    <javac
       srcdir="${test.src}"
       destdir="${build.classes}"
       debug="true"
       classpathref="test.compile.classpath"
       includeantruntime="false">
      <include name="com/redhat/ceylon/compiler/test/**"/>
    </javac>
  </target>

  <!-- Rule to build compiler jar -->
  <target name="build" depends="compiler.classes">
    <mkdir dir="${build.dist}"/>
    <mkdir dir="${build.lib}"/>
    <mkdir dir="${build.ceylon.cars}"/>
    <jar destfile="${build.lib}/compiler.jar">
      <fileset dir="${build.classes}">
        <exclude name="ceylon/**"/>
        <exclude name="com/redhat/ceylon/compiler/test/**"/>
      </fileset>
      <fileset dir="${javac.src}">
        <include name="com/sun/tools/javac/resources/*.properties"/>
      </fileset>
    </jar>
  </target>

  <!-- FIXME: Historical rule -->
  <!-- Rule to run the parser regression tests -->
  <target name="test.parser" depends="publish">
    <mkdir dir="${parser.test.dst}"/>
    <apply executable="java">
      <arg value="-ea"/>
      <arg value="-cp"/>
      <arg value="${ceylon.compiler.lib}:${antlr.lib}"/>
      <arg value="com.redhat.ceylon.compiler.launcher.CeylonCompiler"/>
      <arg value="-d"/>
      <arg value="${parser.test.dst}"/>
      <fileset dir="${parser.test.src}">
  <include name="*.ceylon"/>
      </fileset>
    </apply>
    <apply executable="diff" failonerror="true">
      <arg value="-w"/>
      <arg value="${parser.test.dst}"/>
      <fileset dir="${parser.test.src}">
        <include name="*.ceylon.out"/>
      </fileset>
    </apply>
  </target>

  <!-- FIXME: Historical rule -->
  <!-- Rule to run the compiler regression tests -->
  <target name="test.compiler" depends="publish">
    <exec executable="bin/compilertest" failonerror="true"/>
  </target>

  <!-- Runs the JUnit tests -->
  <target name="test" depends="publish,test.classes,ceylon-tests.car" description="Runs the JUnit tests">
    <mkdir dir="${test.reports}"/>
  	<property name="bootclasspath" refid="test.run.classpath" />
    <junit printsummary="yes" haltonfailure="no">
      <classpath refid="test.run.classpath"/>
      <jvmarg value="-Xbootclasspath/p:${bootclasspath}"/>

      <formatter type="xml"/>

      <batchtest fork="yes" todir="${test.reports}">
        <fileset dir="${test.src}">
          <include name="**/*Test.java"/>
          <exclude name="com/redhat/ceylon/compiler/test/CompilerTest.java"/>
          <exclude name="com/redhat/ceylon/compiler/test/ceylon/**"/>
        </fileset>
        <zipfileset src="${ceylon-tests.car}">
          <include name="com/redhat/ceylon/compiler/test/ceylon/**/*Test.class"/>
          <exclude name="com/redhat/ceylon/compiler/test/ceylon/Test.class"/>
        </zipfileset>
      </batchtest>
    </junit>
 
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports}"/>
    </junitreport>
  </target>
	
	
  <!-- Runs the JUnit compiler tests only -->
  <target name="compiler-tests-only" depends="publish,test.classes" description="Runs the JUnit tests">
    <mkdir dir="${test.reports}"/>
    <property name="bootclasspath" refid="test.run.classpath" />
    <junit printsummary="yes" haltonfailure="no">
      <classpath refid="test.run.classpath"/>
      <jvmarg value="-Xbootclasspath/p:${bootclasspath}"/>

      <formatter type="xml"/>

      <batchtest fork="yes" todir="${test.reports}">
        <fileset dir="${test.src}">
          <include name="**/*Test.java"/>
          <exclude name="com/redhat/ceylon/compiler/test/CompilerTest.java"/>
          <exclude name="com/redhat/ceylon/compiler/test/ceylon/**"/>
        </fileset>
      </batchtest>
    </junit>
 
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports}"/>
    </junitreport>
  </target>
    
    
  <!-- Runs the JUnit ceylon tests only -->
  <target name="ceylon-tests-only" depends="publish,test.classes,ceylon-tests.car" description="Runs the JUnit tests">
    <mkdir dir="${test.reports}"/>
  	<property name="bootclasspath" refid="test.run.classpath" />
    <junit printsummary="yes" haltonfailure="no">
      <classpath refid="test.run.classpath"/>
      <jvmarg value="-Xbootclasspath/p:${bootclasspath}"/>

      <formatter type="xml"/>

      <batchtest fork="yes" todir="${test.reports}">

        <zipfileset src="${ceylon-tests.car}">
          <include name="com/redhat/ceylon/compiler/test/ceylon/**/*Test.class"/>
          <exclude name="com/redhat/ceylon/compiler/test/ceylon/Test.class"/>
        </zipfileset>
      </batchtest>
    </junit>
 
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports}"/>
    </junitreport>
  </target>

  <target name="ceylonc" depends="publish">
    <taskdef name="ceylonc" classname="com.redhat.ceylon.compiler.ant.Ceylonc" >
      <classpath>
        <pathelement location="${ceylon.compiler.lib}"/>
      </classpath>
    </taskdef>
  </target>
	
  <path id="ceylon.tests.classpath">
    <pathelement path="${junit.lib}"/>
    <pathelement path="${ceylon-tests.car}"/>
  </path>
	
  <target name="ceylon-tests.car" depends="publish,test.classes,ceylonc">
  	<delete dir="${ceylon-tests.dir}"/>
    <mkdir dir="${ceylon-tests.dir}"/>
    <jar destfile="${ceylon-tests.car}">
      <fileset dir="${build.classes}">
        <include name="com/redhat/ceylon/compiler/test/ceylon/**"/>
      </fileset>
    </jar>
    <ceylonc     
	  classpathReference="ceylon.tests.classpath"		    	
      compiler="bin/ceylonc"
      srcdir="${test.src}"
      destdir="${build.ceylon.cars}">
       <include name="com/redhat/ceylon/compiler/test/ceylon/*.ceylon"/>
    </ceylonc>
  </target>

</project>
